{"version":3,"file":"content.bundle.js","mappings":";;;;;;;;;;;;;;;;AAA4D;AAC5D;AACO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,4BAA4B,wEAAc;AAC1C;AACA;AACA;AACA;AACA,UAAU,WAAW;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,mDAAmD;AACnD;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU,qBAAqB;AAC/B;AACA;AACA;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;UCjBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACN8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,2DAAQ;AACZ,mBAAmB,qCAAqC;AACxD;AACA,CAAC;AACD;AACA","sources":["webpack:///./src/pilotSite/select.js","webpack:///./src/selectorScraping/scrape.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/content.js"],"sourcesContent":["import { getMapOfFields } from \"../selectorScraping/scrape\";\r\n\r\nexport const selectors = {\r\n  options: {\r\n    itemCategory: `#trade > div.top > div > div.search-bar.search-advanced > div > div.search-advanced-pane.blue > div:nth-child(1) > div.filter-group-body > div:nth-child(1) > span > div.multiselect.filter-select.modified > div.multiselect__content-wrapper > ul > li > span > span`,\r\n  },\r\n  inputsContainer: {\r\n    minMaxSelectors: {\r\n      min: `span > input[placeholder='min']`,\r\n      max: `span > input[placeholder='max']`\r\n    },\r\n    containers: `.filter.filter-property`,\r\n    containersIndexMapping: getMapOfFields(),\r\n  }\r\n}\r\n\r\nconst getMinMaxFields = (inputContainer) => {\r\n  const { min, max } = selectors.inputsContainer.minMaxSelectors;\r\n  const minField = inputContainer.querySelector(min);\r\n  const maxField = inputContainer.querySelector(max);\r\n  return {\r\n    minField,\r\n    maxField\r\n  }\r\n}\r\n\r\nfunction setInput(inputElement, desiredValue) {\r\n  inputElement.value = desiredValue; // Change the value\r\n  inputElement.dispatchEvent(new Event('change')); // Trigger the change event\r\n}\r\n\r\nexport const setField = (fieldName, value) => {\r\n  const inputContainerSelectors = selectors.inputsContainer.containers;\r\n  const inputContainers = document.querySelectorAll(inputContainerSelectors);\r\n  const indexOfTarget = selectors.inputsContainer.containersIndexMapping[fieldName];\r\n  const targetInputContainer = inputContainers[indexOfTarget];\r\n\r\n  const { minField, maxField } = getMinMaxFields(targetInputContainer);\r\n  console.log(minField, fieldName, value)\r\n  setInput(minField, value);\r\n}\r\n","function getAllFields() {\r\n  var selector = `.filter.filter-property`;\r\n  return document.querySelectorAll(selector);\r\n}\r\n\r\nfunction getTitle(element) { \r\n  var name = element.querySelector(`span > div.filter-title`).innerText;\r\n  var nameNoFluff = name.trim();\r\n  return nameNoFluff;\r\n};\r\n\r\nexport function getMapOfFields() {\r\n  var elesRaw = getAllFields();\r\n  var elesIndexWithName = [...elesRaw].map((ele, i) => [getTitle(ele), i]);\r\n  var map = {};\r\n  elesIndexWithName.forEach(([name, index]) => map[name] = index);\r\n  return map;\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { setField } from \"./pilotSite/select\";\r\n\r\n// On website.\r\nconsole.log(\"Content script injected!\"); \r\n\r\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n  if (message.type === \"SEARCH\") {\r\n    console.log(\"Received message:\", message.payload);\r\n    setField(\"Armour\", 10);\r\n    sendResponse({ reply: \"Hello from content script!\" });\r\n  }\r\n});\r\n\r\n\r\n"],"names":[],"sourceRoot":""}